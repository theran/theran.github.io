<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Louis Theran</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 24 Oct 2024 10:38:27 +0000</pubDate>
    <lastBuildDate>Thu, 24 Oct 2024 10:38:27 +0000</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>How to make a site like this one</title>
        <description>&lt;p&gt;This site is generated with &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, which is “blog aware”.  I guess
that means I should have a blog here.  In keeping with the tradition of 
DIY technology projects, I’m going to start by using it to write about 
itself, mostly so that I don’t forget what I did.&lt;/p&gt;

&lt;h1 id=&quot;who-is-this-for&quot;&gt;Who is this for?&lt;/h1&gt;

&lt;p&gt;Besides me, that is.  If you follow these instructions, you’ll end 
up with a site that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Is under source control with &lt;a href=&quot;http://github.com/&quot;&gt;git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Is made of static files, delivered by a &lt;a href=&quot;http://fastly.com/&quot;&gt;CDN&lt;/a&gt; that should provide good speed and uptime&lt;/li&gt;
  &lt;li&gt;Has repetitive parts generated from &lt;a href=&quot;http://yaml.org/&quot;&gt;structured text files&lt;/a&gt; by templates&lt;/li&gt;
  &lt;li&gt;Does not require and databases or servers&lt;/li&gt;
  &lt;li&gt;Is free, unless you want your own &lt;a href=&quot;https://en.wikipedia.org/wiki/Second-level_domain&quot;&gt;second-level domain name&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Configuration is minimal with no manual upgrades on the &lt;a href=&quot;http://pages.github.com/&quot;&gt;server-side&lt;/a&gt; required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This comes at some cost in flexibility:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Everything on the site is public&lt;/li&gt;
  &lt;li&gt;TLS isn’t supported&lt;/li&gt;
  &lt;li&gt;You don’t have CGI, SQL, &lt;a href=&quot;https://shellshocker.net/&quot;&gt;shellshock&lt;/a&gt;, etc. support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The bottom line is that these instructions are for publishing 
public documents, not programming or doing the kinds of fine-gained 
setups that you’d want a &lt;a href=&quot;https://en.wikipedia.org/wiki/Content_management_system&quot;&gt;CMS&lt;/a&gt; for.&lt;/p&gt;

&lt;h1 id=&quot;whats-covered&quot;&gt;What’s covered?&lt;/h1&gt;

&lt;p&gt;We’re going to go through the steps to get the site’s skeleton up and running in a 
way you can edit it.  The steps are serialized into an order that works.&lt;/p&gt;

&lt;p&gt;We’re not going to cover things like &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/Style/CSS/&quot;&gt;CSS&lt;/a&gt;
for formatting the site or give a detailed &lt;a href=&quot;https://help.github.com/categories/bootcamp/&quot;&gt;introduction to git&lt;/a&gt;.
We’re also not going to cover Windows.  I don’t have a Windows computer.&lt;/p&gt;

&lt;h1 id=&quot;1-install-jekyll&quot;&gt;1. Install Jekyll&lt;/h1&gt;

&lt;p&gt;The tool used to actually generate the site is &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.  This 
is itself a wrapper around some useful utilities.  Installing it 
is very easy:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-get-set-up-with-github&quot;&gt;2. Get set up with GitHub&lt;/h1&gt;

&lt;p&gt;Next you’ll want a &lt;a href=&quot;http://github.com/&quot;&gt;GitHub&lt;/a&gt; account.  If you don’t have one,
go make one now.&lt;/p&gt;

&lt;p&gt;Once you’ve done that, download the &lt;a href=&quot;http://mac.github.com/&quot;&gt;GitHub app&lt;/a&gt; for Mac.
Open it and log in with your github username.&lt;/p&gt;

&lt;p&gt;If you are using Linux, skip this step and then use the command
line where I say to use the app below.&lt;/p&gt;

&lt;h1 id=&quot;3-create-a-minimal-site&quot;&gt;3. Create a minimal site&lt;/h1&gt;

&lt;p&gt;In the app, select “New Repository” from the file menu.  The name of the 
new repository should be&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;username.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; is your GitHub account.  Pick someplace to put the files, 
which we’ll call &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REPO&lt;/code&gt;.  For now, don’t put anything there.  Now 
open up a terminal and do&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd REPO
$ git pull https://github.com/theran/theran.github.io.git template 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Keep this terminal open and in the same directory.
Now edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; to include your name and the associated information.&lt;br /&gt;
Then, in the command line again do&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see an empty site at &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;.  This is where you’ll 
test new edits out.  To get going you will want to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contact.md&lt;/code&gt; to have your contact information.&lt;/li&gt;
  &lt;li&gt;Edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bio.md&lt;/code&gt; to have your brief bio&lt;/li&gt;
  &lt;li&gt;Put a picture of yourself in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assets/images&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/picture.html&lt;/code&gt; to point at the picture you added and show your address&lt;/li&gt;
  &lt;li&gt;Edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CV.html&lt;/code&gt; to have your actual data&lt;/li&gt;
  &lt;li&gt;Put your papers into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_papers/&lt;/code&gt;.  (For the moment, just see &lt;a href=&quot;https://github.com/theran/theran.github.io/tree/master/_papers&quot;&gt;https://github.com/theran/theran.github.io/tree/master/_papers&lt;/a&gt; for the format. Don’t forget to add journals, conferences, and coauthors in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As you edit, Jekyll will keep rebuilding, so you can see how it looks at &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;4-the-publishing-workflow&quot;&gt;4. The publishing workflow&lt;/h1&gt;

&lt;p&gt;Once you are happy with what you have, go back to the GitHub app.  Click “Commit” and 
then “Sync” (at the top right).  Wait a minute, and you’ll have a web site at
&lt;a href=&quot;http://username.github.io/&quot;&gt;http://username.github.io/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From now on, the editing and publishing cycle is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Start Jekyll with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Edit or add files, testing in your browsers at &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;When you are ready to publish, just do commit in the GitHub app and then Sync&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;5-get-a-domain-name&quot;&gt;5. Get a domain name&lt;/h1&gt;

&lt;p&gt;These next two steps are optional.  If you want your own domain name and don’t have 
one, first you have to buy it.  I recommend to do this with &lt;a href=&quot;http://iwantmyname.com&quot;&gt;http://iwantmyname.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next you need to tell GitHub about your domain name.  To do this, on the command line 
run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd REPO
$ echo yourdomain.example &amp;gt; CNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then commit and sync the new file.&lt;/p&gt;

&lt;h1 id=&quot;6-get-better-dns-hosting&quot;&gt;6. Get better DNS hosting&lt;/h1&gt;

&lt;p&gt;If you did already have a domain and aren’t using it for email 
go on.  &lt;strong&gt;Otherwise, you should stop here and add records to your
existing zone.&lt;/strong&gt;  (I don’t know your configuration, so I won’t be
too helpful.)&lt;/p&gt;

&lt;p&gt;Next, you’ll need to set up your new domain to point at GitHub.  For 
rather opaque reasons, a lot of DNS providers will give quite poor
performance.  To get around this, you’ll need an account at 
&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;CloudFlare&lt;/a&gt;.  Go get one. Pick free and take 
the default options.&lt;/p&gt;

&lt;p&gt;Once you’ve got the CloudFlare account, it will ask you to 
add a web site.  Type in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yourdomain.example&lt;/code&gt;.  It will 
import any DNS records you have for your zone.  Delete all 
of these.&lt;/p&gt;

&lt;p&gt;Now in the CloudFlare control panel add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; record 
for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@&lt;/code&gt; to point to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;.  If you 
want, also add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; record for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www&lt;/code&gt; to also
point to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt;. For both of these records 
click the orange cloud to make it “off CloudFlare”.  It will 
turn gray. (GitHub is giving you similar features already.)&lt;/p&gt;

&lt;p&gt;Finally, look to the right side of the CloudFlare panel 
above.  It lists two name servers.  Go back to your 
DNS registrar’s control panel (e.g., at &lt;a href=&quot;http://iwantmyname.com&quot;&gt;http://iwantmyname.com&lt;/a&gt;)
and paste these into the “set name servers” field, 
deleting any other name servers.&lt;/p&gt;

&lt;p&gt;Wait until everything updates at DNS World HQ, and then 
your new URL &lt;a href=&quot;http://yourdomain.example/&quot;&gt;http://yourdomain.example/&lt;/a&gt; will
point to your new site.&lt;/p&gt;

</description>
        <pubDate>Wed, 12 Nov 2014 13:21:29 +0000</pubDate>
        <link>http://localhost:4000/2014/11/12/about-this-site.html</link>
        <guid isPermaLink="true">http://localhost:4000/2014/11/12/about-this-site.html</guid>
        
        
      </item>
    
  </channel>
</rss>
